name: 'Syncpack: Synchronise monorepo dependency versions'
description: 'Always use the same versions of each dependency'

branding:
  icon: 'cloud-lightning'
  color: 'green'

inputs:
  bot-email:
    description: 'GitHub Email for the Syncpack Bot'
    required: false
    default: 'github-actions@github.com'
  bot-username:
    description: 'GitHub Username for the Syncpack Bot'
    required: false
    default: 'github-actions[bot]'
  commit-message:
    description: 'Commit Message to use when applying fixes'
    required: false
    default: 'chore(syncpack): format and sync package.json files'
  format-mismatches:
    description: '"fix" | "ignore"'
    required: false
    default: 'fix'
  lockfile-mismatches:
    description: '"fix" | "ignore"'
    required: false
    default: 'fix'
  package-manager-version:
    description: 'The Semver version of npm, yarn, or pnpm'
    required: false
    default: 'latest'
  package-manager:
    description: 'Possible values npm | yarn | pnpm'
    required: false
    default: 'npm'
  semver-range-mismatches:
    description: '"lint" | "fix" | "ignore"'
    required: false
    default: 'fix'
  syncpack-version:
    description: 'The Semver version of syncpack'
    required: false
    default: '7.2.1'
  version-mismatches:
    description: '"lint" | "fix" | "ignore"'
    required: false
    default: 'fix'
  branch:
    description: 'Name of branch to open'
    required: false
    default: ''
  base-branch:
    description: 'Name of branch to create pull request against'
    required: false     
    default: 'main'
  reviewers: 
    description: 'List of reviewer(s) comma separated, required for Pull Requests'
    required: false
    default: '' 
  github-token:   
    description: 'Github token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Init
      id: init
      shell: bash
      run: |
        if [ "${{ inputs.version-mismatches }}" = "fix" ] || [ "${{ inputs.format-mismatches }}" = "fix" ] || [ "${{ inputs.semver-range-mismatches }}" = "fix" ]; then
          echo "::set-output name=anyFixEnabled::true"
        fi

    - name: Install Syncpack
      id: install-syncpack
      shell: bash
      run: |
        npm i -g "syncpack@${{ inputs.syncpack-version }}"

    - if: ${{ steps.init.outputs.anyFixEnabled == 'true' && inputs.branch == '' }}
      name: Checkout Branch
      id: checkout-branch
      shell: bash
      run: |
        git config pull.rebase true
        git fetch
        git checkout $GITHUB_HEAD_REF
        git pull origin $GITHUB_HEAD_REF
    
    - if: ${{ inputs.branch != '' }}
      name: Create Branch
      id: create-branch
      shell: bash
      run: |
        git fetch
        git checkout ${{ inputs.base-branch }}
        git pull origin 
        git checkout -b ${{ inputs.branch }}

    # Version Mismatches
    # https://github.com/zerodom30/syncpack#list-mismatches
    # https://github.com/zerodom30/syncpack#fix-mismatches

    - if: ${{ inputs.version-mismatches == 'fix' }}
      name: syncpack fix-mismatches
      id: version-mismatches-fix
      shell: bash
      run: |
        set +e
        value="$(syncpack fix-mismatches)"
        value="${value//'%'/'%25'}"
        value="${value//$'\n'/'%0A'}"
        value="${value//$'\r'/'%0D'}"
        echo "::set-output name=stdout::$value"
        set -e
        if [[ `git diff --name-only` ]]; then
          git add .
          echo "::set-output name=has-changes::true"
        fi

    # Format Mismatches
    # https://github.com/zerodom30/syncpack#format

    - if: ${{ inputs.format-mismatches == 'fix' }}
      name: syncpack format
      id: format-mismatches-fix
      shell: bash
      run: |
        set +e
        value="$(syncpack format)"
        value="${value//'%'/'%25'}"
        value="${value//$'\n'/'%0A'}"
        value="${value//$'\r'/'%0D'}"
        echo "::set-output name=stdout::$value"
        set -e
        if [[ `git diff --name-only` ]]; then
          git add .
          echo "::set-output name=has-changes::true"
        fi

    # Semver Range Mismatches
    # https://github.com/zerodom30/syncpack#lint-semver-ranges
    # https://github.com/zerodom30/syncpack#set-semver-ranges

    - if: ${{ inputs.semver-range-mismatches == 'fix' }}
      name: syncpack set-semver-ranges
      id: semver-range-mismatches-fix
      shell: bash
      run: |
        set +e
        value="$(syncpack set-semver-ranges)"
        value="${value//'%'/'%25'}"
        value="${value//$'\n'/'%0A'}"
        value="${value//$'\r'/'%0D'}"
        echo "::set-output name=stdout::$value"
        set -e
        if [[ `git diff --name-only` ]]; then
          git add .
          echo "::set-output name=has-changes::true"
        fi

    - if: ${{ inputs.lockfile-mismatches != 'ignore' }}
      name: Update Lockfile
      id: lockfile-mismatches-fix
      shell: bash
      run: |
        if [ "${{ inputs.package-manager }}" = "yarn" ]; then
          npm i -g "yarn@${{ inputs.package-manager-version }}"
          yarn install
        elif [ "${{ inputs.package-manager }}" = "pnpm" ]; then
          npm i -g "pnpm@${{ inputs.package-manager-version }}"
          pnpm install --no-frozen-lockfile
        else
          npm i -g "npm@${{ inputs.package-manager-version }}"
          npm install
        fi

    - if: ${{ steps.init.outputs.anyFixEnabled == 'true' }}
      name: Detect Changes
      id: detect-changes
      shell: bash
      run: |
        if [[ `git status --porcelain` ]]; then
          echo "::set-output name=has-changes::true"
        fi

    - if: always()
      name: syncpack list-mismatches
      id: version-mismatches-lint
      shell: bash
      run: |
        if [ "${{ inputs.version-mismatches }}" = "lint" ]; then
          set +e
          value="$(syncpack list-mismatches)"
          value="${value//'%'/'%25'}"
          value="${value//$'\n'/'%0A'}"
          value="${value//$'\r'/'%0D'}"
          echo "::set-output name=stdout::$value"
          set -e
          syncpack list-mismatches
        fi

    - if: always()
      name: syncpack lint-semver-ranges
      id: semver-range-mismatches-lint
      shell: bash
      run: |
        if [ "${{ inputs.semver-range-mismatches }}" = "lint" ]; then
          set +e
          value="$(syncpack lint-semver-ranges)"
          value="${value//'%'/'%25'}"
          value="${value//$'\n'/'%0A'}"
          value="${value//$'\r'/'%0D'}"
          echo "::set-output name=stdout::$value"
          set -e
          syncpack lint-semver-ranges
        fi

    - if: ${{ steps.init.outputs.anyFixEnabled == 'true' }}
      name: Commit and Create PR
      id: commit-and-push
      shell: bash
      run: |
        if [ "${{ steps.detect-changes.outputs.has-changes }}" = "true" ]; then
          git add .
          git config user.name "${{ inputs.bot-username }}"
          git config user.email "${{ inputs.bot-email }}"
          git commit -m "${{ inputs.commit-message }}"
          git push --set-upstream origin "${{ inputs.branch }}"
        fi

    - if: ${{ steps.init.outputs.anyFixEnabled == 'true' }}    
      name: Create Pull Request
      uses: devops-infra/action-pull-request@v0.5.5
      with: 
        github_token: ${{ inputs.github-token }}
        target_branch: ${{ inputs.base-branch }}
        source_branch: ${{ inputs.branch }}
        reviewer: ${{ inputs.reviewers }}
             